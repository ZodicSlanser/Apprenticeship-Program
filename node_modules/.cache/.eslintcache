[{"C:\\Users\\Dell\\Desktop\\RadicalX\\apprenticeship-program\\src\\index.js":"1","C:\\Users\\Dell\\Desktop\\RadicalX\\apprenticeship-program\\src\\App.js":"2","C:\\Users\\Dell\\Desktop\\RadicalX\\apprenticeship-program\\src\\Components\\TeamRoles.js":"3","C:\\Users\\Dell\\Desktop\\RadicalX\\apprenticeship-program\\src\\Components\\PopForm.js":"4","C:\\Users\\Dell\\Desktop\\RadicalX\\apprenticeship-program\\src\\Components\\DropDownRoleMenu.js":"5","C:\\Users\\Dell\\Desktop\\RadicalX\\apprenticeship-program\\src\\Components\\DropDownSkillsMenu.js":"6"},{"size":217,"mtime":1664369104448,"results":"7","hashOfConfig":"8"},{"size":237,"mtime":1665009284772,"results":"9","hashOfConfig":"8"},{"size":739,"mtime":1665094874219,"results":"10","hashOfConfig":"8"},{"size":4161,"mtime":1665112903277,"results":"11","hashOfConfig":"8"},{"size":1697,"mtime":1665112840225,"results":"12","hashOfConfig":"8"},{"size":2001,"mtime":1665112232179,"results":"13","hashOfConfig":"8"},{"filePath":"14","messages":"15","suppressedMessages":"16","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"p36opq",{"filePath":"17","messages":"18","suppressedMessages":"19","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"20","messages":"21","suppressedMessages":"22","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"23","messages":"24","suppressedMessages":"25","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"26"},{"filePath":"27","messages":"28","suppressedMessages":"29","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"30","usedDeprecatedRules":"31"},{"filePath":"32","messages":"33","suppressedMessages":"34","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"35","usedDeprecatedRules":"31"},"C:\\Users\\Dell\\Desktop\\RadicalX\\apprenticeship-program\\src\\index.js",[],[],"C:\\Users\\Dell\\Desktop\\RadicalX\\apprenticeship-program\\src\\App.js",["36","37"],[],"C:\\Users\\Dell\\Desktop\\RadicalX\\apprenticeship-program\\src\\Components\\TeamRoles.js",["38"],[],"C:\\Users\\Dell\\Desktop\\RadicalX\\apprenticeship-program\\src\\Components\\PopForm.js",["39"],[],"import React, { useState } from 'react'\r\nimport '../styles/PopForm.css'\r\nimport medalIcon from '../icons/medal-star.png'\r\nimport clockIcon from '../icons/clock.png'\r\nimport closeIcon from '../icons/close.png'\r\nimport DropDownRoleMenu  from './DropDownRoleMenu'\r\nimport DropDownSkillsMenu from './DropDownSkillsMenu'\r\nimport closeSquare from '../icons/close-square.png'\r\n\r\nexport default function PopForm(){\r\n    /* Role*/\r\n    const [role,setRole]=useState('Select Role')\r\n    function pickRole(selectedRole){\r\n        setRole(selectedRole)\r\n        setshowRoleMenu(!showRoleMenu)\r\n\r\n    }\r\n    /*To Toggle Role DropDown Menu */\r\n    const [showRoleMenu,setshowRoleMenu]=useState(false)\r\n    function toggleRoleMenu(){\r\n        setshowRoleMenu(!showRoleMenu)\r\n    }\r\n    /******************************************************************* */\r\n    /*Role Description triggered by onChange*/\r\n    const [desc,setDesc]=useState('')\r\n    function saveDesc(event){\r\n        setDesc(event.target.value)\r\n    }\r\n    //**************************************************************** */\r\n    /*toggle the menu */\r\n    const [showRSkillsMenu,setshowRSkillsMenu]=useState(false)\r\n    function toggleSkillsMenu(){\r\n        setshowRSkillsMenu(!showRSkillsMenu)\r\n    }\r\n    const [reqSkills,setreqSkills]=useState([])\r\n    function appendToSkills(skill){\r\n        setreqSkills(prevSkills=>{\r\n            if(prevSkills.length<=2){\r\n            return[\r\n                ...prevSkills,\r\n                skill\r\n            ]\r\n        }\r\n        else\r\n        {\r\n            return prevSkills\r\n        }\r\n    })\r\n    }\r\n    function deleteSkill(index){\r\n        setreqSkills(reqSkills=>[\r\n              ...reqSkills.slice(0, index),\r\n              ...reqSkills.slice(index + 1, reqSkills.length)\r\n            ])\r\n  \r\n    }\r\n    \r\n    return(\r\n        <div className=\"popup\">\r\n            <div className=\"title-btn\">\r\n                <h1>Add Role</h1>\r\n                <div className='buttons'>\r\n                    <button className='button'>save</button>\r\n                    <img src={closeIcon} alt='Close utton'/>\r\n                </div>\r\n            </div>\r\n            <DropDownRoleMenu \r\n                title={role}\r\n                showRoleMenu={showRoleMenu}\r\n                toggleRoleMenu={toggleRoleMenu}\r\n                handleChange={pickRole}\r\n                options={[\"ios Developer\",\"Mobile Developer\",\r\n                \"Full Stack Developer\",\"Front-end Developer\",\"Back-end Developer\"\r\n                ]}\r\n             />\r\n            <div className='role-desc'>\r\n                <h3>Role Description</h3>\r\n                <textarea type=\"text\" className='input-desc' placeholder=\"Description\" onChange={saveDesc}/>\r\n            </div>\r\n            <div className='req-skills-component'>\r\n                <h3>Required Skills (Select any 3)</h3>\r\n                 <DropDownSkillsMenu \r\n                       Frame={medalIcon}\r\n                       showMenu={showRSkillsMenu}\r\n                       toggleMenu={toggleSkillsMenu}\r\n                       skills={[\"Swift\",\"ios\",\r\n                       \"Objective-c\",\"ARM\"\r\n                       ]}\r\n                       chooseSkill={appendToSkills}\r\n                       chosenSkills={reqSkills}\r\n                 />\r\n                 <div className='reqSkills'>\r\n                    {\r\n                        reqSkills.map((skill,index)=>(\r\n                            <span key={index} className='singleSkill'>\r\n                                {skill}\r\n                                <img src={closeSquare} alt='close Icon' className='close-skill' onClick={()=>deleteSkill(index)}/>\r\n                            </span>\r\n                        ))\r\n                    }\r\n                 </div>\r\n\r\n            </div>\r\n            <div className='minimum-hours'>\r\n                <h3>Minimum Hours</h3>\r\n                <div className='icon-hours'>\r\n                    <img src={clockIcon} alt='Clock Icon' className='clock-Icon'/>\r\n                    <input type=\"text\" className='input-hours' placeholder=\"No. of hours\" />\r\n                </div>\r\n            </div>\r\n\r\n        </div>\r\n    )\r\n}","C:\\Users\\Dell\\Desktop\\RadicalX\\apprenticeship-program\\src\\Components\\DropDownRoleMenu.js",["40"],[],"import React, { useState } from 'react'\r\nimport '../styles/DropMenu.css'\r\nimport downarrw from '../icons/arrow-down.png'\r\nimport userFrame from '../icons/frame.png'\r\n\r\nexport default function DropDownRoleMenu (props ){\r\n    const title=props.title\r\n    const AllOptions=props.options\r\n    const [options,setOptions]= useState(props.options)\r\n    /*Search Function triggered by any change (keystroke)in the search */\r\n    function search(event){\r\n        setOptions(pervOptions =>{\r\n\r\n            const newOptions=[]\r\n            AllOptions.map(pervOption=>{\r\n                if(pervOption.toLowerCase().includes(event.target.value.toLowerCase())){\r\n                    newOptions.push(pervOption)\r\n                }\r\n            })\r\n            return(newOptions)\r\n        })\r\n    }\r\n    \r\n    return(\r\n        <div className='dropDown-wrapper'>\r\n            <img src={userFrame} alt='User Icon' className='user-Icon'/>\r\n            <div className='select-btn' onClick={props.toggleRoleMenu} >\r\n                    <div>{title}</div>\r\n                     <img src={downarrw} alt='arrow down' className='down-arrow'/>\r\n            </div>\r\n            {props.showRoleMenu && \r\n            <div className='menu-content'>\r\n                    <div className='search' >\r\n                        <input type=\"text\" placeholder='Search' onChange={search} />\r\n                    </div>\r\n                <ul className=\"options\">\r\n                    {options.map((option,index)=>(\r\n                        <li key={index} onClick={()=>props.handleChange(option)  }>{option}</li>\r\n                    ))\r\n                     }\r\n                </ul>\r\n            </div> }\r\n    \r\n         </div>\r\n    )\r\n}",[],"C:\\Users\\Dell\\Desktop\\RadicalX\\apprenticeship-program\\src\\Components\\DropDownSkillsMenu.js",["41"],[],"import React, { useState } from 'react'\r\nimport '../styles/DropSkillMenu.css'\r\nimport tickCircle from '../icons/Vector.svg'\r\nimport downarrw from '../icons/arrow-down.png'\r\n\r\nexport default function DropDownSkillsMenu (props ){\r\n    /*containing all options */\r\n    const AllOptions=props.skills\r\n    /*it will hold the searched for options */\r\n    const [options,setOptions]= useState(props.skills)\r\n    /*Search Function triggered by any change (keystroke)in the search */\r\n    function search(event){\r\n        setOptions(pervOptions =>{\r\n            const newOptions=[]\r\n            AllOptions.map(pervOption=>{\r\n                /*to check if the entered letters in search bar are included in any option ignoring the case */\r\n                if(pervOption.toLowerCase().includes(event.target.value.toLowerCase())){\r\n                    newOptions.push(pervOption)\r\n                }\r\n            })\r\n            return(newOptions)\r\n        })\r\n    }\r\n    \r\n    return(\r\n        <div className='skillwrapper'>\r\n            <img src={props.Frame} alt='Icon' className='skillIcon'/>\r\n            <div className='skillselect-btn' onClick={props.toggleMenu} >\r\n                    <div >Select skills</div>\r\n                    <img src={downarrw} alt='arrow down' className='skilldown-arrow'/>\r\n            </div>\r\n            {props.showMenu && \r\n            <div className='skillMenuContent'>\r\n                    <div className='skillsearch' >\r\n                        <input type=\"text\" placeholder='Search' onChange={search}  />\r\n                    </div>\r\n                <ul className=\"skilloptions\">\r\n                    {options.map((option,index)=>(\r\n                         <li key={index} onClick={()=>props.chooseSkill(option)  }>\r\n                            <img src={tickCircle} alt='tick' className='tick-icon'/>\r\n                            {option}</li>\r\n                        ))\r\n                    }\r\n                </ul>\r\n            </div> }\r\n    \r\n        </div>\r\n    )\r\n}",{"ruleId":"42","severity":1,"message":"43","line":1,"column":17,"nodeType":"44","messageId":"45","endLine":1,"endColumn":25},{"ruleId":"42","severity":1,"message":"46","line":3,"column":8,"nodeType":"44","messageId":"45","endLine":3,"endColumn":17},{"ruleId":"42","severity":1,"message":"43","line":1,"column":17,"nodeType":"44","messageId":"45","endLine":1,"endColumn":25},{"ruleId":"42","severity":1,"message":"47","line":25,"column":12,"nodeType":"44","messageId":"45","endLine":25,"endColumn":16},{"ruleId":"48","severity":1,"message":"49","line":15,"column":38,"nodeType":"50","messageId":"51","endLine":15,"endColumn":40},{"ruleId":"48","severity":1,"message":"49","line":15,"column":38,"nodeType":"50","messageId":"51","endLine":15,"endColumn":40},"no-unused-vars","'useState' is defined but never used.","Identifier","unusedVar","'TeamRoles' is defined but never used.","'desc' is assigned a value but never used.","array-callback-return","Array.prototype.map() expects a return value from arrow function.","ArrowFunctionExpression","expectedInside"]